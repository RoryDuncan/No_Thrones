/*
@class Cube
@methods constructor
@params length, width, depth, color
*/

var Cube, Entity;

Cube = (function() {

  function Cube(l, w, d, colorInHex) {
    this.geometry = new THREE.CubeGeometry(l, w, d);
    this.material = new THREE.MeshLambertMaterial({
      color: colorInHex
    });
    this.mesh = new THREE.Mesh(this.geometry, this.material);
  }

  return Cube;

})();

/*
@class Entity
@methods addToScene, adjust, loaded
@params name, path
*/


Entity = (function() {

  function Entity(name, path) {
    var entity, source, texture;
    _.bindAll(this, "addToScene", "adjust", "loaded");
    entity = this;
    this.name = name || "";
    source = path;
    texture = new THREE.TextureLoader;
    texture.load(source);
    texture.addEventListener("load", this.loaded);
  }

  Entity.prototype.addToScene = function() {
    console.log("Adding ", this);
    this.adjust();
    pointer.scene.add(this.sprite);
    return console.log(this.name, "Added to scene");
  };

  Entity.prototype.adjust = function() {
    console.log("adjusting:", this.sprite);
    this.sprite.scale.x = this.sprite.scale.z = this.sprite.scale.y = 1;
    return this.sprite.position.y += this.texture.image.height / 2;
  };

  Entity.prototype.loaded = function(e) {
    var material;
    console.log("this:", this, e);
    this.texture = e.content;
    material = new THREE.MeshBasicMaterial({
      map: this.texture
    });
    material.transparent = true;
    this.material = material;
    this.geometry = new THREE.PlaneGeometry(60, 48);
    this.sprite = new THREE.Mesh(this.geometry, this.material);
    this.sprite.doubleSided = true;
    console.log(this);
    return this.addToScene();
  };

  return Entity;

})();

// Generated by CoffeeScript 1.5.0-pre
