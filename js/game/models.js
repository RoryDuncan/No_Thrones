// Generated by CoffeeScript 1.6.3
/*

@_______________________No_Thrones_________________________@
@__________________________by______________________________@
@_______________________Rory_Duncan________________________@
@             http://www.github.com/RoryDuncan             @
*/

/*
@class Cube
@level atomic, graphical
@params [Object] geometry, [Object] material, [Object] position
*/

var Cube, Sprite;

Cube = (function() {
  function Cube(geometry, material, position) {
    this.geometry = new THREE.CubeGeometry(geometry.width, geometry.height, geometry.depth);
    this.material = new THREE.MeshLambertMaterial(material);
    this.mesh = new THREE.Mesh(this.geometry, this.material);
    this.mesh.position = position || new THREE.Vector3(0, 0, 0);
    _.bindAll(this, "addToScene", "setPosition");
  }

  Cube.prototype.from = {};

  Cube.prototype.addToScene = function() {
    return pointer.scene.add(this.mesh);
  };

  Cube.prototype.setPosition = function(x, y, z) {
    return this.mesh.position.set(x, y, z);
  };

  return Cube;

})();

/*
@class Sprite
@level atomic, graphical
@ConstructorParams name, path
*/


Sprite = (function() {
  function Sprite(name, path) {
    var entity, source, texture;
    _.bindAll(this, "addToScene", "adjust", "loaded");
    entity = this;
    this.name = name || "";
    source = path;
    texture = new THREE.TextureLoader;
    texture.load(source);
    texture.addEventListener("load", this.loaded);
  }

  Sprite.prototype.addToScene = function() {
    console.log("Adding ", this);
    this.adjust();
    pointer.scene.add(this.sprite);
    return console.log("Sprite \"" + this.name + "\" added to scene");
  };

  Sprite.prototype.adjust = function() {
    console.log("adjusting:", this.sprite);
    this.sprite.scale.x = this.sprite.scale.z = this.sprite.scale.y = 1 * 50;
    return this.sprite.position.set(0, 20, 0);
  };

  Sprite.prototype.loaded = function(e) {
    var h, material, w;
    this.texture = e.content;
    h = this.texture.image.naturalHeight;
    w = this.texture.image.naturalWidth;
    material = new THREE.SpriteMaterial({
      map: this.texture,
      useScreenCoordinates: false,
      color: 0xffffff,
      fog: true
    });
    this.material = material;
    /*
    
    @geometry = new THREE.PlaneGeometry(w, h)
    
    @sprite = new THREE.Mesh @geometry, @material
    @sprite.doubleSided = true
    */

    this.sprite = new THREE.Sprite(this.material);
    return this.addToScene();
  };

  return Sprite;

})();
